argv = ['/usr/local/Cellar/node/0.8.16/bin/node-waf', 'configure', 'build']
blddir = '/Users/eddie/Sites/blightstatus-nodetiles/node_modules/nodetiles-core/node_modules/canvas/build'
commands = {'dist': 0, 'configure': True, 'distcheck': 0, 'install': 0, 'build': True, 'clean': 0, 'distclean': 0, 'check': 0, 'uninstall': 0}
cwd = '/Users/eddie/Sites/blightstatus-nodetiles/node_modules/nodetiles-core/node_modules/canvas'
environ = {'npm_config_color': 'true', 'npm_config_engine_strict': '', 'npm_config_searchopts': '', 'npm_config_fetch_retry_factor': '10', 'npm_config_group': '501', 'npm_package_homepage': 'https://github.com/learnboost/node-canvas', 'npm_config_browser': '', 'npm_package_engines_node': '>= 0.4.0 && < 0.9.0', 'npm_config_global': '', 'rvm_warn_clr': '\x1b[33m', 'SHELL': '/bin/bash', '_first': '0', 'rvm_version': '1.18.2 (stable)', 'npm_config_pre': '', 'rvm_reset_clr': '\x1b[m', 'SVN_EDITOR': 'nano', 'npm_config_tmp': '/var/folders/dh/11kntw6x7ns5nkqjh_bzrclm0000gn/T/', 'SHERIFF_USER': 'ForeclosureSvcUser', 'npm_config_argv': '{"remain":["nodetiles-core"],"cooked":["install","nodetiles-core"],"original":["install","nodetiles-core"]}', 'npm_config_cache_lock_wait': '10000', 'LAMA_EMAIL': 'nola@codeforamerica.org', 'npm_package_scripts_preinstall': 'node-waf configure build', 'npm_config_save_bundle': '', 'MY_RUBY_HOME': '/Users/eddie/.rvm/rubies/ruby-1.9.3-p374', 'npm_config_save_dev': '', 'npm_config_optional': 'true', 'npm_config_init_version': '0.0.0', 'npm_config_user_agent': 'node/v0.8.16', 'SHERIFF_WSDL': 'http://www.civilsheriff.com/ForeclosureWebService/Foreclosure.svc?wsdl', 'npm_lifecycle_event': 'preinstall', 'AMAZON_SECRET_ACCESS_KEY': 'VC4ZtVnUSD1mPsV3LBTPqzFtafX7WOKVGGTXAeYl', 'npm_config_init_author_name': '', 'RUBY_VERSION': 'ruby-1.9.3-p374', 'npm_config_rebuild_bundle': 'true', 'npm_package_devDependencies_should': '*', 'npm_config_yes': '', 'npm_config_usage': '', 'npm_package_description': 'Canvas graphics API backed by Cairo', 'npm_config_shell': '/bin/bash', 'npm_config_ignore': '', 'npm_config_viewer': 'man', 'npm_config_globalconfig': '/usr/local/share/npm/etc/npmrc', 'PROJECT_HOME': '/Users/eddie/Sites', 'SHERIFF_NS': 'http://www.civilsheriff.com/ForeclosureWebService', 'npm_config_parseable': '', 'rvm_path': '/Users/eddie/.rvm', 'npm_config_globalignorefile': '/usr/local/share/npm/etc/npmignore', 'escape_flag': '1', 'npm_config_userignorefile': '/Users/eddie/.npmignore', 'USER': 'eddie', 'npm_package_author_name': 'TJ Holowaychuk', 'npm_config_versions': '', 'SHLVL': '2', 'npm_config_cache_lock_stale': '60000', 'npm_config_init_author_url': '', 'npm_config_fetch_retry_maxtimeout': '60000', 'npm_config_prefix': '/usr/local/share/npm', 'npm_config_unsafe_perm': 'true', 'npm_config_cache': '/Users/eddie/.npm', 'EDITOR': 'nano', 'npm_config_save_optional': '', 'GEM_PATH': '/Users/eddie/.rvm/gems/ruby-1.9.3-p374:/Users/eddie/.rvm/gems/ruby-1.9.3-p374@global', 'TERM_SESSION_ID': '59E90A9D-F262-4B38-A157-59C37E2FDBA3', 'npm_config_proxy': '', 'npm_config_depth': 'null', 'npm_config_umask': '18', 'npm_config_json': '', 'npm_config_editor': 'nano', 'SHERIFF_ACTION': 'http://www.civilsheriff.com/ForeclosureWebService/IForeclosure/GetForeclosure', 'TMPDIR': '/var/folders/dh/11kntw6x7ns5nkqjh_bzrclm0000gn/T/', 'npm_package_repository_type': 'git', 'rvm_debug_clr': '\x1b[35m', 'npm_config_npat': '', 'npm_config_init_module': '/Users/eddie/.npm-init.js', 'npm_config_long': '', 'npm_config_searchsort': 'name', 'GEM_HOME': '/Users/eddie/.rvm/gems/ruby-1.9.3-p374', 'npm_lifecycle_script': 'node-waf configure build', '__array_start': '0', 'rvm_error_clr': '\x1b[31m', 'COMMAND_MODE': 'unix2003', 'npm_config_git': 'git', 'npm_package_readme': '"# node-canvas\\n\\n Node canvas is a [Cairo](http://cairographics.org/) backed Canvas implementation for [NodeJS](http://nodejs.org).\\n\\n## Authors\\n\\n  - TJ Holowaychuk ([visionmedia](http://github.com/visionmedia))\\n\\n## Installation\\n\\n    $ npm install canvas\\n\\nUnless previously installed you\'ll _need_ __Cairo__. For system-specific installation view the [Wiki](https://github.com/LearnBoost/node-canvas/wiki/_pages).\\n\\n## Screencasts\\n\\n  - [Introduction](http://screenr.com/CTk)\\n\\n## Example\\n\\n```javascript\\nvar Canvas = require(\'canvas\')\\n  , canvas = new Canvas(200,200)\\n  , ctx = canvas.getContext(\'2d\');\\n\\nctx.font = \'30px Impact\';\\nctx.rotate(.1);\\nctx.fillText(\\"Awesome!\\", 50, 100);\\n\\nvar te = ctx.measureText(\'Awesome!\');\\nctx.strokeStyle = \'rgba(0,0,0,0.5)\';\\nctx.beginPath();\\nctx.lineTo(50, 102);\\nctx.lineTo(50 + te.width, 102);\\nctx.stroke();\\n\\nconsole.log(\'<img src=\\"\' + canvas.toDataURL() + \'\\" />\');\\n```\\n\\n## Non-Standard API\\n\\n node-canvas extends the canvas API to provide interfacing with node, for example streaming PNG data, converting to a `Buffer` instance, etc. Among the interfacing API, in some cases the drawing API has been extended for SSJS image manipulation / creation usage, however keep in mind these additions may fail to render properly within browsers.\\n\\n### Image#src=Buffer\\n\\n node-canvas adds `Image#src=Buffer` support, allowing you to read images from disc, redis, etc and apply them via `ctx.drawImage()`. Below we draw scaled down squid png by reading it from the disk with node\'s I/O.\\n\\n```javascript\\nfs.readFile(__dirname + \'/images/squid.png\', function(err, squid){\\n  if (err) throw err;\\n  img = new Image;\\n  img.src = squid;\\n  ctx.drawImage(img, 0, 0, img.width / 4, img.height / 4);\\n});\\n```\\n\\n Below is an example of a canvas drawing it-self as the source several time:\\n\\n```javascript\\nvar img = new Image;\\nimg.src = canvas.toBuffer();\\nctx.drawImage(img, 0, 0, 50, 50);\\nctx.drawImage(img, 50, 0, 50, 50);\\nctx.drawImage(img, 100, 0, 50, 50);\\n```\\n\\n### Image#dataMode\\n\\nnode-canvas adds `Image#dataMode` support, which can be used to opt-in to mime data tracking of images (currently only JPEGs).\\n\\nWhen mime data is tracked, in PDF mode JPEGs can be embedded directly into the output, rather than being re-encoded into PNG. This can drastically reduce filesize, and speed up rendering.\\n\\n```javascript\\nvar img = new Image;\\nimg.dataMode = Image.MODE_IMAGE; // Only image data tracked\\nimg.dataMode = Image.MODE_MIME; // Only mime data tracked\\nimg.dataMode = Image.MODE_MIME | Image.MODE_IMAGE; // Both are tracked\\n```\\n\\nIf image data is not tracked, and the Image is drawn to an image rather than a PDF canvas, the output will be junk. Enabling mime data tracking has no benefits (only a slow down) unless you are generating a PDF.\\n\\n### Canvas#createPNGStream()\\n\\n  To create a `PNGStream` simply call `canvas.createPNGStream()`, and the stream will start to emit _data_ events, finally emitting _end_ when finished. If an exception occurs the _error_ event is emitted.\\n\\n```javascript\\nvar fs = require(\'fs\')\\n  , out = fs.createWriteStream(__dirname + \'/text.png\')\\n  , stream = canvas.createPNGStream();\\n\\nstream.on(\'data\', function(chunk){\\n  out.write(chunk);\\n});\\n\\nstream.on(\'end\', function(){\\n  console.log(\'saved png\');\\n});\\n```\\n\\nCurrently _only_ sync streaming is supported, however we plan on supporting async streaming as well (of course :) ). Until then the `Canvas#toBuffer(callback)` alternative is async utilizing `eio_custom()`.\\n\\n### Canvas#createJPEGStream()\\n\\nYou can likewise create a `JPEGStream` by calling `canvas.createJPEGStream()` with some optional parameters; functionality is otherwise identical to `createPNGStream()`. See `examples/crop.js` for an example.\\n\\n### Canvas#toBuffer()\\n\\nA call to `Canvas#toBuffer()` will return a node `Buffer` instance containing all of the PNG data.\\n\\n```javascript\\ncanvas.toBuffer();\\n```\\n\\n### Canvas#toBuffer() async\\n\\nOptionally we may pass a callback function to `Canvas#toBuffer()`, and this process will be performed asynchronously, and will `callback(err, buf)`.\\n\\n```javascript\\ncanvas.toBuffer(function(err, buf){\\n\\n});\\n```\\n\\n### Canvas#toDataURL() async\\n\\nOptionally we may pass a callback function to `Canvas#toDataURL()`, and this process will be performed asynchronously, and will `callback(err, str)`.\\n\\n```javascript\\ncanvas.toDataURL(function(err, str){\\n\\n});\\n```\\n\\nor specify the mime type:\\n\\n```javascript\\ncanvas.toDataURL(\'image/png\', function(err, str){\\n\\n});\\n```\\n\\n### CanvasRenderingContext2d#patternQuality\\n\\nGiven one of the values below will alter pattern (gradients, images, etc) render quality, defaults to _good_.\\n\\n  - fast\\n  - good\\n  - best\\n\\n### CanvasRenderingContext2d#textDrawingMode\\n\\nCan be either `path` or `glyph`. Using `glyph` is much faster than `path` for drawing, and when using a PDF context will embed the text natively, so will be selectable and lower filesize. The downside is that cairo does not have any subpixel precision for `glyph`, so this will be noticeably lower quality for text positioning in cases such as rotated text. Also, strokeText in `glyph` will act the same as fillText, except using the stroke style for the fill.\\n\\nDefaults to _path_.\\n\\nThis property is tracked as part of the canvas state in save/restore.\\n\\n### Global Composite Operations\\n\\nIn addition to those specified and commonly implemented by browsers, the following have been added:\\n\\n  - multiply\\n  - screen\\n  - overlay\\n  - hard-light\\n  - soft-light\\n  - hsl-hue\\n  - hsl-saturation\\n  - hsl-color\\n  - hsl-luminosity\\n\\n## Anti-Aliasing\\n\\n Set anti-aliasing mode\\n\\n - default\\n - none\\n - gray\\n - subpixel\\n\\n For example:\\n\\n```javascript\\nctx.antialias = \'none\';\\n```\\n\\n## PDF Support\\n\\n  Basic PDF support was added in 0.11.0. Make sure to install cairo with `--enable-pdf=yes` for the PDF backend. node-canvas must know that it is creating\\n  a PDF on initialization, using the \\"pdf\\" string:\\n\\n```js\\nvar canvas = new Canvas(200, 500, \'pdf\');\\n```\\n\\n An additional method `.addPage()` is then available to create \\n multiple page PDFs:\\n\\n```js\\nctx.font = \'22px Helvetica\';\\nctx.fillText(\'Hello World\', 50, 80);\\nctx.addPage();\\n\\nctx.font = \'22px Helvetica\';\\nctx.fillText(\'Hello World 2\', 50, 80);\\nctx.addPage();\\n\\nctx.font = \'22px Helvetica\';\\nctx.fillText(\'Hello World 3\', 50, 80);\\nctx.addPage();\\n```\\n\\n## Benchmarks\\n\\n Although node-canvas is extremely new, and we have not even begun optimization yet it is already quite fast. For benchmarks vs other node canvas implementations view this [gist](https://gist.github.com/664922), or update the submodules and run `$ make benchmark` yourself.\\n\\n## Contribute\\n\\n Want to contribute to node-canvas? patches for features, bug fixes, documentation, examples and others are certainly welcome. Take a look at the [issue queue](https://github.com/LearnBoost/node-canvas/issues) for existing issues.\\n\\n## Examples\\n\\n Examples are placed in _./examples_, be sure to check them out! most produce a png image of the same name, and others such as _live-clock.js_ launch an http server to be viewed in the browser.\\n\\n## Testing\\n\\nIf you have not previously, init git submodules:\\n\\n    $ git submodule update --init\\n\\nBuild node-canvas:\\n\\n    $ node-waf configure build\\n\\nUnit tests:\\n\\n    $ make test\\n\\nVisual tests:\\n\\n    $ make test-server\\n\\n## Versions\\n\\nTested with and designed for:\\n\\n  - node 0.4.2\\n  - cairo 1.8.6\\n\\nFor node 0.2.x `node-canvas` <= 0.4.3 may be used,\\n0.5.0 and above are designed for node 0.4.x only.\\n\\n## License\\n\\n(The MIT License)\\n\\nCopyright (c) 2010 LearnBoost &lt;dev@learnboost.ca&gt;\\n\\nPermission is hereby granted, free of charge, to any person obtaining\\na copy of this software and associated documentation files (the\\n\'Software\'), to deal in the Software without restriction, including\\nwithout limitation the rights to use, copy, modify, merge, publish,\\ndistribute, sublicense, and/or sell copies of the Software, and to\\npermit persons to whom the Software is furnished to do so, subject to\\nthe following conditions:\\n\\nThe above copyright notice and this permission notice shall be\\nincluded in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \'AS IS\', WITHOUT WARRANTY OF ANY KIND,\\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\\n"', 'TERM_PROGRAM_VERSION': '309', 'npm_config_rollback': 'true', 'PGDATA': '/usr/local/var/postgres/', 'npm_package_repository_url': 'git://github.com/learnboost/node-canvas', 'HOME': '/Users/eddie', 'DISPLAY': '/tmp/launch-o6whxM/org.macosforge.xquartz:0', 'TERM_PROGRAM': 'Apple_Terminal', 'LANG': 'en_US.UTF-8', 'Apple_PubSub_Socket_Render': '/tmp/launch-ljrHqz/Render', 'npm_config_save': '', 'npm_config_registry': 'https://registry.npmjs.org/', 'npm_config_unicode': 'true', 'npm_config_production': '', 'npm_config_message': '%s', 'npm_config_always_auth': '', '_': '/usr/local/Cellar/node/0.8.16/bin/node-waf', 'npm_package_devDependencies_express': '>= 2.3.7 && < 3.0.0', 'npm_config_loglevel': 'http', 'AMAZON_ACCESS_KEY_ID': 'AKIAILL6VZQ2H2GQDPDQ', 'npm_config_cache_lock_retries': '10', 'rvm_prefix': '/Users/eddie', 'npm_config_strict_ssl': 'true', 'IRBRC': '/Users/eddie/.rvm/rubies/ruby-1.9.3-p374/.irbrc', 'npm_package_keywords_2': 'graphics', 'npm_package_keywords_3': 'pixman', 'npm_package_keywords_0': 'canvas', 'npm_package_keywords_1': 'graphic', 'npm_package_keywords_6': 'images', 'npm_package_keywords_7': 'pdf', 'npm_package_keywords_4': 'cairo', 'npm_package_keywords_5': 'image', 'npm_package_main': './lib/canvas.js', 'npm_config_tag': 'latest', '_second': '1', 'npm_config_searchexclude': '', 'rvm_notify_clr': '\x1b[32m', 'PGPASSWORD': 'e7a3d86f58d6150591304b105d0a2832', '__CF_USER_TEXT_ENCODING': '0x1F5:0:0', 'npm_config_version': '', 'SHERIFF_PASSWORD': '$F0re$012', 'npm_config_force': '', 'LOGNAME': 'eddie', 'npm_package_author_email': 'tj@learnboost.com', 'npm_node_execpath': '/usr/local/Cellar/node/0.8.16/bin/node', 'npm_config_link': '', 'npm_package_name': 'canvas', 'npm_config_userconfig': '/Users/eddie/.npmrc', 'WORKON_HOME': '/Users/eddie/.virtualenvs', 'npm_config_dev': '', 'npm_package_devDependencies_jade': '0.11.0', 'npm_config_npaturl': 'http://npat.npmjs.org/', 'npm_config_username': '', 'SHERIFF_DOMAIN': 'CVS07', 'PATH': '/usr/local/Cellar/node/0.8.16/bin:/usr/local/Cellar/node/0.8.16/lib/node_modules/npm/bin/node-gyp-bin:/Users/eddie/Sites/blightstatus-nodetiles/node_modules/nodetiles-core/node_modules/canvas/node_modules/.bin:/Users/eddie/Sites/blightstatus-nodetiles/node_modules/nodetiles-core/node_modules/.bin:/Users/eddie/Sites/blightstatus-nodetiles/node_modules/.bin:/Users/eddie/.rvm/gems/ruby-1.9.3-p374/bin:/Users/eddie/.rvm/gems/ruby-1.9.3-p374@global/bin:/Users/eddie/.rvm/rubies/ruby-1.9.3-p374/bin:/Users/eddie/.rvm/bin:/usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:/usr/local/share/npm/bin:/opt/local/apache2/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/local/mysql/bin/', 'NODE_PATH': '/usr/local/lib/node', 'LAMA_PASSWORD': 'T0ra!T0ga!T06a!', 'npm_config_coverage': '', 'npm_config_proprietary_attribs': 'true', 'npm_config_node_version': 'v0.8.16', 'npm_config_onload_script': '', 'VERSIONER_PYTHON_VERSION': '2.7', 'npm_config_description': 'true', 'npm_config_sign_git_tag': '', 'npm_config_fetch_retry_mintimeout': '10000', 'rvm_bin_path': '/Users/eddie/.rvm/bin', 'NODE': '/usr/local/Cellar/node/0.8.16/bin/node', 'npm_config_fetch_retries': '2', 'npm_config_cache_max': 'null', 'SSH_AUTH_SOCK': '/tmp/launch-1Ei45j/Listeners', 'TERM': 'xterm-color', 'npm_config_user': '501', 'npm_package_version': '0.12.1', 'npm_config_https_proxy': '', 'npm_package_readmeFilename': 'Readme.md', 'npm_config_init_author_email': '', 'LSCOLORS': 'ExFxCxDxBxegedabagacad', 'CLICOLOR': '1', 'HISTCONTROL': 'ignoredups', 'Apple_Ubiquity_Message': '/tmp/launch-32GbDT/Apple_Ubiquity_Message', 'PWD': '/Users/eddie/Sites/blightstatus-nodetiles/node_modules/nodetiles-core/node_modules/canvas', 'VERSIONER_PYTHON_PREFER_32_BIT': 'no', 'npm_config_cache_min': '', 'npm_package_devDependencies_mocha': '*'}
files = []
hash = 0
options = {'profile': False, 'compile_targets': None, 'force': False, 'verbose': 0, 'nocache': False, 'progress_bar': 0, 'destdir': '', 'keep': False, 'zones': '', 'blddir': '', 'prefix': '/usr/local/', 'jobs': 8, 'srcdir': '', 'check_cxx_compiler': 'g++'}
srcdir = '/Users/eddie/Sites/blightstatus-nodetiles/node_modules/nodetiles-core/node_modules/canvas'
